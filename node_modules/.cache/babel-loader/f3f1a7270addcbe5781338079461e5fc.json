{"ast":null,"code":"var _jsxFileName = \"/Users/margaritasukhova/Desktop/GoIT/Projects/react-blended-4/src/components/App/App.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container, Grid, GridItem, Header, SearchForm, Section, Text, Todo } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: []\n    };\n\n    this.addTodo = text => {\n      const todo = {\n        id: nanoid(),\n        text\n      };\n      this.setState(_ref => {\n        let {\n          todos\n        } = _ref;\n        return {\n          todos: [...todos, todo]\n        };\n      });\n    };\n\n    this.handleSubmit = data => {\n      this.addTodo(data);\n    };\n\n    this.deleteTodo = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => todo.id !== id)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    if (todos) {\n      this.setState(() => ({\n        todos\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      todos\n    } = this.state;\n\n    if (prevState.todos !== todos) {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n            onSubmit: this.handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), todos.length === 0 && /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            children: \"There are no any todos ... \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: todos.length > 0 && todos.map((todo, index) => /*#__PURE__*/_jsxDEV(GridItem, {\n              children: /*#__PURE__*/_jsxDEV(Todo, {\n                id: todo.id,\n                text: todo.text,\n                counter: index + 1,\n                onClick: this.deleteTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, todo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/margaritasukhova/Desktop/GoIT/Projects/react-blended-4/src/components/App/App.jsx"],"names":["Component","nanoid","Container","Grid","GridItem","Header","SearchForm","Section","Text","Todo","App","state","todos","addTodo","text","todo","id","setState","handleSubmit","data","deleteTodo","prevState","filter","componentDidMount","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","setItem","stringify","render","length","map","index"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  GridItem,\r\n  Header,\r\n  SearchForm,\r\n  Section,\r\n  Text,\r\n  Todo,\r\n} from 'components';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    todos: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const todos = JSON.parse(localStorage.getItem('todos'));\r\n\r\n    if (todos) {\r\n      this.setState(() => ({ todos }));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { todos } = this.state;\r\n\r\n    if (prevState.todos !== todos) {\r\n      localStorage.setItem('todos', JSON.stringify(todos));\r\n    }\r\n  }\r\n\r\n  addTodo = text => {\r\n    const todo = {\r\n      id: nanoid(),\r\n      text,\r\n    };\r\n\r\n    this.setState(({ todos }) => ({\r\n      todos: [...todos, todo],\r\n    }));\r\n  };\r\n\r\n  handleSubmit = data => {\r\n    this.addTodo(data);\r\n  };\r\n\r\n  deleteTodo = id => {\r\n    this.setState(prevState => ({\r\n      todos: prevState.todos.filter(todo => todo.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Section>\r\n          <Container>\r\n            <SearchForm onSubmit={this.handleSubmit} />\r\n\r\n            {todos.length === 0 && (\r\n              <Text textAlign=\"center\">There are no any todos ... </Text>\r\n            )}\r\n\r\n            <Grid>\r\n              {todos.length > 0 &&\r\n                todos.map((todo, index) => (\r\n                  <GridItem key={todo.id}>\r\n                    <Todo\r\n                      id={todo.id}\r\n                      text={todo.text}\r\n                      counter={index + 1}\r\n                      onClick={this.deleteTodo}\r\n                    />\r\n                  </GridItem>\r\n                ))}\r\n            </Grid>\r\n          </Container>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}